spring.application.name = image-upload
server.port = 8100

spring.data.mongodb.host = localhost
spring.data.mongodb.port = 27017
spring.data.mongodb.database=mydb

spring.config.import=optional:configserver:http://localhost:8888

resilience4j.retry.instances.image-upload-exception.max-attempts=5
#resilience4j.retry.instances.image-upload-exception.wait-duration=2s
#resilience4j.retry.instances.image-upload-exception.enable-exponential-backoff=true

spring.kafka.consumer.bootstrap-servers= localhost:9092
spring.kafka.consumer.group-id=myGroup

spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer = org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer = org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

spring.kafka.consumer.properties.spring.json.trusted=*
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer